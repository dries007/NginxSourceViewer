# Do not include JS, HTML, JSON, XML, PHP, ... !

# Extention != Language
location ~* \.(c|cpp|h|hpp)$            { if ($arg_raw) {break;} set $lang cpp; try_files @highlight @highlight; }
location ~* \.(vhdl?)$                  { if ($arg_raw) {break;} set $lang vhdl; try_files @highlight @highlight; }
location ~* \.(sh)$                     { if ($arg_raw) {break;} set $lang bash; try_files @highlight @highlight; }
location ~* \.?([m|M]ake|[m|M]akefile)$ { if ($arg_raw) {break;} set $lang makefile; try_files @highlight @highlight; }
location ~* \.(md|markdown)$            { if ($arg_raw) {break;} set $lang markdown; try_files @highlight @highlight; }
location ~* \.(sql)$                    { if ($arg_raw) {break;} set $lang sql; try_files @highlight @highlight; }
location ~* \.(bat|BAT)$                { if ($arg_raw) {break;} set $lang dos; try_files @highlight @highlight; }
location ~* \.(g|gcode)$                { if ($arg_raw) {break;} set $lang gcode; try_files @highlight @highlight; }
location ~* \.(v|verilog)$              { if ($arg_raw) {break;} set $lang verilog; try_files @highlight @highlight; }
location ~* \.(kt)$                     { if ($arg_raw) {break;} set $lang kotlin; try_files @highlight @highlight; }
location ~* \.(m)$                      { if ($arg_raw) {break;} set $lang matlab; try_files @highlight @highlight; }
location ~* \.(scad)$                   { if ($arg_raw) {break;} set $lang openscad; try_files @highlight @highlight; }
location ~* \.(ps)$                     { if ($arg_raw) {break;} set $lang powershell; try_files @highlight @highlight; }
location ~* \.(latex|tex)$              { if ($arg_raw) {break;} set $lang tex; try_files @highlight @highlight; }

location ~* \.?(Dockerfile|dockerfile)$ { if ($arg_raw) {break;} set $lang dockerfile; try_files @highlight @highlight; }

# Extention == Language
location ~* \.(tcl|py|sql|gradle|groovy|java|lua|properties|scala)$
{ if ($arg_raw) {break;} set $lang $1; try_files @highlight @highlight; }

# The Monstrosity
location @highlight {
    #ssi on;
    #ssi_types *;

    if (!-f $request_filename) {
        return 404;
    }
    charset UTF-8;
    override_charset on;
    source_charset UTF-8;

    default_type text/html;
    add_header Content-Type text/html;

    return 200 '<<PASTE HTML HERE>>';
}